// Code generated by protoc-gen-go. DO NOT EDIT.
// source: name_registration_record.proto

package pbraven

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NameRegistrationRecord struct {
	// Name to be registered.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Destination address.
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	// The ultimate recepient's public key.
	Recipient string `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// Extra information.
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ProofOfWork          int64    `protobuf:"varint,5,opt,name=proof_of_work,json=proofOfWork,proto3" json:"proof_of_work,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NameRegistrationRecord) Reset()         { *m = NameRegistrationRecord{} }
func (m *NameRegistrationRecord) String() string { return proto.CompactTextString(m) }
func (*NameRegistrationRecord) ProtoMessage()    {}
func (*NameRegistrationRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_ae1e402e97ed6b09, []int{0}
}

func (m *NameRegistrationRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NameRegistrationRecord.Unmarshal(m, b)
}
func (m *NameRegistrationRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NameRegistrationRecord.Marshal(b, m, deterministic)
}
func (m *NameRegistrationRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NameRegistrationRecord.Merge(m, src)
}
func (m *NameRegistrationRecord) XXX_Size() int {
	return xxx_messageInfo_NameRegistrationRecord.Size(m)
}
func (m *NameRegistrationRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_NameRegistrationRecord.DiscardUnknown(m)
}

var xxx_messageInfo_NameRegistrationRecord proto.InternalMessageInfo

func (m *NameRegistrationRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NameRegistrationRecord) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *NameRegistrationRecord) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *NameRegistrationRecord) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *NameRegistrationRecord) GetProofOfWork() int64 {
	if m != nil {
		return m.ProofOfWork
	}
	return 0
}

func init() {
	proto.RegisterType((*NameRegistrationRecord)(nil), "pbraven.NameRegistrationRecord")
}

func init() { proto.RegisterFile("name_registration_record.proto", fileDescriptor_ae1e402e97ed6b09) }

var fileDescriptor_ae1e402e97ed6b09 = []byte{
	// 179 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xbf, 0xca, 0xc2, 0x30,
	0x14, 0x47, 0xc9, 0xd7, 0x7e, 0x4a, 0x53, 0x5c, 0x32, 0x48, 0x06, 0x91, 0xd2, 0xa9, 0x93, 0x8b,
	0xef, 0xa1, 0x90, 0xc5, 0x31, 0xa4, 0xed, 0xad, 0x84, 0xd2, 0xdc, 0x70, 0x1b, 0xf4, 0xbd, 0x7c,
	0x42, 0xf1, 0xe2, 0x9f, 0x6e, 0xe1, 0xfc, 0xce, 0x09, 0x5c, 0xb9, 0x0f, 0x6e, 0x02, 0x4b, 0x70,
	0xf5, 0x73, 0x22, 0x97, 0x3c, 0x06, 0x4b, 0xd0, 0x21, 0xf5, 0x87, 0x48, 0x98, 0x50, 0xad, 0x63,
	0x4b, 0xee, 0x06, 0xa1, 0x7e, 0x08, 0xb9, 0x3d, 0xb9, 0x09, 0xcc, 0x42, 0x35, 0x6c, 0x2a, 0x25,
	0xf3, 0xd7, 0x2f, 0x5a, 0x54, 0xa2, 0x29, 0x0c, 0xbf, 0x55, 0x25, 0xcb, 0x1e, 0xe6, 0xe4, 0x03,
	0x8b, 0xfa, 0x8f, 0xa7, 0x25, 0x52, 0x3b, 0x59, 0x10, 0x74, 0x3e, 0x7a, 0x08, 0x49, 0x67, 0xbc,
	0xff, 0xc0, 0xbb, 0xef, 0xc8, 0x47, 0xee, 0xf3, 0x6f, 0xff, 0x41, 0xaa, 0x96, 0x9b, 0x48, 0x88,
	0x83, 0xc5, 0xc1, 0xde, 0x91, 0x46, 0xfd, 0x5f, 0x89, 0x26, 0x33, 0x25, 0xc3, 0xf3, 0x70, 0x41,
	0x1a, 0xdb, 0x15, 0x1f, 0x71, 0x7c, 0x06, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x72, 0x4c, 0x64, 0xe6,
	0x00, 0x00, 0x00,
}
