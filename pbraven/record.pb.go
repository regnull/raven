// Code generated by protoc-gen-go. DO NOT EDIT.
// source: record.proto

package pbraven

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Record struct {
	NameRegistrationRecord *NameRegistrationRecord `protobuf:"bytes,1,opt,name=name_registration_record,json=nameRegistrationRecord,proto3" json:"name_registration_record,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                `json:"-"`
	XXX_unrecognized       []byte                  `json:"-"`
	XXX_sizecache          int32                   `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf94fd919e302a1d, []int{0}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetNameRegistrationRecord() *NameRegistrationRecord {
	if m != nil {
		return m.NameRegistrationRecord
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "pbraven.Record")
}

func init() { proto.RegisterFile("record.proto", fileDescriptor_bf94fd919e302a1d) }

var fileDescriptor_bf94fd919e302a1d = []byte{
	// 114 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0x4a, 0x4d, 0xce,
	0x2f, 0x4a, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x48, 0x2a, 0x4a, 0x2c, 0x4b,
	0xcd, 0x93, 0x92, 0xcb, 0x4b, 0xcc, 0x4d, 0x8d, 0x2f, 0x4a, 0x4d, 0xcf, 0x2c, 0x2e, 0x29, 0x4a,
	0x2c, 0xc9, 0xcc, 0xcf, 0x8b, 0x47, 0x56, 0xa8, 0x94, 0xcc, 0xc5, 0x16, 0x04, 0xe6, 0x0b, 0x45,
	0x72, 0x49, 0xe0, 0x52, 0x2b, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x6d, 0x24, 0xaf, 0x07, 0x35, 0x55,
	0xcf, 0x2f, 0x31, 0x37, 0x35, 0x08, 0x49, 0x1d, 0xc4, 0x88, 0x20, 0xb1, 0x3c, 0xac, 0xe2, 0x49,
	0x6c, 0x60, 0xbb, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x13, 0x7a, 0x30, 0x20, 0xa4, 0x00,
	0x00, 0x00,
}
