// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package pbraven

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PayloadType int32

const (
	PayloadType_PAYLOAD_DATA    PayloadType = 0
	PayloadType_PAYLOAD_MESSAGE PayloadType = 1
)

var PayloadType_name = map[int32]string{
	0: "PAYLOAD_DATA",
	1: "PAYLOAD_MESSAGE",
}

var PayloadType_value = map[string]int32{
	"PAYLOAD_DATA":    0,
	"PAYLOAD_MESSAGE": 1,
}

func (x PayloadType) String() string {
	return proto.EnumName(PayloadType_name, int32(x))
}

func (PayloadType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

type Message struct {
	Version              int32       `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Sender               []byte      `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver             []byte      `protobuf:"bytes,3,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Signature            []byte      `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	PayloadType          PayloadType `protobuf:"varint,5,opt,name=payload_type,json=payloadType,proto3,enum=pbraven.PayloadType" json:"payload_type,omitempty"`
	Payload              []byte      `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_33c57e4bae7b9afd, []int{0}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Message) GetSender() []byte {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Message) GetReceiver() []byte {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *Message) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Message) GetPayloadType() PayloadType {
	if m != nil {
		return m.PayloadType
	}
	return PayloadType_PAYLOAD_DATA
}

func (m *Message) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterEnum("pbraven.PayloadType", PayloadType_name, PayloadType_value)
	proto.RegisterType((*Message)(nil), "pbraven.Message")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_33c57e4bae7b9afd) }

var fileDescriptor_33c57e4bae7b9afd = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x48, 0x2a, 0x4a, 0x2c,
	0x4b, 0xcd, 0x53, 0x3a, 0xc1, 0xc8, 0xc5, 0xee, 0x0b, 0x91, 0x12, 0x92, 0xe0, 0x62, 0x2f, 0x4b,
	0x2d, 0x2a, 0xce, 0xcc, 0xcf, 0x93, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x82, 0x71, 0x85, 0xc4,
	0xb8, 0xd8, 0x8a, 0x53, 0xf3, 0x52, 0x52, 0x8b, 0x24, 0x98, 0x14, 0x18, 0x35, 0x78, 0x82, 0xa0,
	0x3c, 0x21, 0x29, 0x2e, 0x8e, 0xa2, 0xd4, 0xe4, 0xd4, 0xcc, 0xb2, 0xd4, 0x22, 0x09, 0x66, 0xb0,
	0x0c, 0x9c, 0x2f, 0x24, 0xc3, 0xc5, 0x59, 0x9c, 0x99, 0x9e, 0x97, 0x58, 0x52, 0x5a, 0x94, 0x2a,
	0xc1, 0x02, 0x96, 0x44, 0x08, 0x08, 0x99, 0x73, 0xf1, 0x14, 0x24, 0x56, 0xe6, 0xe4, 0x27, 0xa6,
	0xc4, 0x97, 0x54, 0x16, 0xa4, 0x4a, 0xb0, 0x2a, 0x30, 0x6a, 0xf0, 0x19, 0x89, 0xe8, 0x41, 0xdd,
	0xa5, 0x17, 0x00, 0x91, 0x0c, 0xa9, 0x2c, 0x48, 0x0d, 0xe2, 0x2e, 0x40, 0x70, 0x40, 0x8e, 0x84,
	0x72, 0x25, 0xd8, 0xc0, 0x86, 0xc2, 0xb8, 0x5a, 0x26, 0x5c, 0xdc, 0x48, 0xba, 0x84, 0x04, 0xb8,
	0x78, 0x02, 0x1c, 0x23, 0x7d, 0xfc, 0x1d, 0x5d, 0xe2, 0x5d, 0x1c, 0x43, 0x1c, 0x05, 0x18, 0x84,
	0x84, 0xb9, 0xf8, 0x61, 0x22, 0xbe, 0xae, 0xc1, 0xc1, 0x8e, 0xee, 0xae, 0x02, 0x8c, 0x49, 0x6c,
	0xe0, 0x00, 0x31, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x05, 0x8b, 0x18, 0x39, 0x21, 0x01, 0x00,
	0x00,
}
